/* eslint-disable react-refresh/only-export-components */

import React, { useState } from 'react';
import type { SafeString, SafeNumber, SafeBoolean, APIResponse, OperationResult } from '../types/core';
import { motion, AnimatePresence } from 'framer-motion';
import { Card, CardContent, CardHeader, CardTitle } from '../../components/ui/card';
import { Button } from '../../components/ui/button';
import { Badge } from '../../components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '../../components/ui/tabs';
import { 
  Database, 
  Brain, 
  Zap, 
  Target, 
  Award,
  TrendingUp,
  BookOpen,
  Activity,
  Crown,
  Sparkles
} from 'lucide-react';
import { useBancoEvaluaciones } from '../../hooks/useBancoEvaluaciones';
import { useRealExamDiagnostics } from '../../hooks/useRealExamDiagnostics';
import { useNavigate } from 'react-router-dom';

export const BackendExploitationDashboard: React.FC = () => {
  const navigate = useNavigate();
  const { stats: bancoStats, loading: bancoLoading, generarEvaluacion } = useBancoEvaluaciones();
  const { 
    availableExams, 
    diagnostics, 
    loading: examLoading, 
    generateAllDiagnostics 
  } = useRealExamDiagnostics();
  
  const [activeFeature, setActiveFeature] = useState<string | null>(null);

  const handleGenerateEvaluation = async (prueba: string) => {
    setActiveFeature('banco');
    
    const config = {
      tipo_evaluacion: 'adaptativa' as const,
      prueba_paes: prueba,
      total_preguntas: 15,
      duracion_minutos: 45,
      distribucion_dificultad: {
        basico: 30,
        intermedio: 50,
        avanzado: 20
      }
    };

    const result = await generarEvaluacion(config);
    if (result) {
      console.log('EvaluaciÃ³n generada:', result);
      // AquÃ­ podrÃ­as navegar a la evaluaciÃ³n o mostrar un modal
    }
    
    setActiveFeature(null);
  };

  const handleGenerateAllDiagnostics = async () => {
    setActiveFeature('diagnostics');
    await generateAllDiagnostics();
    setActiveFeature(null);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-blue-900 to-indigo-900 p-6">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="max-w-7xl mx-auto space-y-6"
      >
        {/* Header */}
        <Card className="bg-black/40 backdrop-blur-xl border-cyan-500/30">
          <CardHeader>
            <div className="flex items-center justify-between">
              <div className="flex items-center gap-4">
                <motion.div
                  animate={{ rotate: 360 }}
                  transition={{ duration: 10, repeat: Infinity, ease: "linear" }}
                  className="w-12 h-12 bg-gradient-to-r from-cyan-500 to-purple-500 rounded-full flex items-center justify-center"
                >
                  <Database className="w-6 h-6 text-white" />
                </motion.div>
                <div>
                  <CardTitle className="text-white text-2xl">Backend Exploitation Dashboard</CardTitle>
                  <p className="text-cyan-300">Activando el arsenal completo del sistema PAES</p>
                </div>
              </div>
              
              <div className="flex items-center gap-3">
                <Badge variant="outline" className="text-green-400 border-green-400">
                  <Activity className="w-4 h-4 mr-1" />
                  Sistema Activo
                </Badge>
                <Badge variant="outline" className="text-purple-400 border-purple-400">
                  <Crown className="w-4 h-4 mr-1" />
                  Modo Profesional
                </Badge>
              </div>
            </div>
          </CardHeader>
        </Card>

        {/* MÃ©tricas del Sistema */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
          <Card className="bg-black/40 backdrop-blur-xl border-green-500/30">
            <CardContent className="p-6 text-center">
              <Database className="w-8 h-8 text-green-400 mx-auto mb-3" />
              <div className="text-3xl font-bold text-white">{bancoStats.totalPreguntas}</div>
              <div className="text-sm text-green-300">Preguntas en Banco</div>
            </CardContent>
          </Card>

          <Card className="bg-black/40 backdrop-blur-xl border-blue-500/30">
            <CardContent className="p-6 text-center">
              <BookOpen className="w-8 h-8 text-blue-400 mx-auto mb-3" />
              <div className="text-3xl font-bold text-white">{availableExams.length}</div>
              <div className="text-sm text-blue-300">ExÃ¡menes Oficiales</div>
            </CardContent>
          </Card>

          <Card className="bg-black/40 backdrop-blur-xl border-purple-500/30">
            <CardContent className="p-6 text-center">
              <Target className="w-8 h-8 text-purple-400 mx-auto mb-3" />
              <div className="text-3xl font-bold text-white">{diagnostics.length}</div>
              <div className="text-sm text-purple-300">DiagnÃ³sticos Reales</div>
            </CardContent>
          </Card>

          <Card className="bg-black/40 backdrop-blur-xl border-orange-500/30">
            <CardContent className="p-6 text-center">
              <Zap className="w-8 h-8 text-orange-400 mx-auto mb-3" />
              <div className="text-3xl font-bold text-white">{bancoStats.evaluacionesGeneradas}</div>
              <div className="text-sm text-orange-300">Evaluaciones Generadas</div>
            </CardContent>
          </Card>
        </div>

        {/* Tabs de Funcionalidades */}
        <Tabs defaultValue="banco" className="space-y-6">
          <TabsList className="grid w-full grid-cols-4 bg-black/40">
            <TabsTrigger value="banco">Banco de Evaluaciones</TabsTrigger>
            <TabsTrigger value="diagnostics">DiagnÃ³sticos Reales</TabsTrigger>
            <TabsTrigger value="superpaes">SuperPAES Hub</TabsTrigger>
            <TabsTrigger value="analytics">Analytics IRT</TabsTrigger>
          </TabsList>

          <TabsContent value="banco" className="space-y-6">
            <Card className="bg-black/40 backdrop-blur-xl border-white/10">
              <CardHeader>
                <CardTitle className="text-white flex items-center gap-2">
                  <Database className="w-5 h-5" />
                  Banco de Evaluaciones - Sistema AutÃ³nomo
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div className="space-y-4">
                    <h4 className="text-white font-semibold">Preguntas por Prueba</h4>
                    {Object.entries(bancoStats.preguntasPorPrueba).map(([prueba, cantidad]) => (
                      <div key={prueba} className="flex items-center justify-between p-3 bg-white/5 rounded-lg">
                        <span className="text-white">{prueba.replace('_', ' ')}</span>
                        <div className="flex items-center gap-3">
                          <Badge variant="outline">{cantidad} preguntas</Badge>
                          <Button 
                            size="sm" 
                            onClick={() => handleGenerateEvaluation(prueba)}
                            disabled={bancoLoading || activeFeature === 'banco'}
                          >
                            {activeFeature === 'banco' ? 'Generando...' : 'Generar EvaluaciÃ³n'}
                          </Button>
                        </div>
                      </div>
                    ))}
                  </div>
                  
                  <div className="space-y-4">
                    <h4 className="text-white font-semibold">Funcionalidades Activas</h4>
                    <div className="space-y-2">
                      {[
                        'Evaluaciones Adaptativas IRT',
                        'DistribuciÃ³n Inteligente de Dificultad',
                        'Cache Optimizado TTL',
                        'Sistema sin APIs Externas',
                        'AnÃ¡lisis Predictivo AutomÃ¡tico'
                      ].map((feature, index) => (
                        <div key={index} className="flex items-center gap-2 text-green-300">
                          <Sparkles className="w-4 h-4" />
                          <span className="text-sm">{feature}</span>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="diagnostics" className="space-y-6">
            <Card className="bg-black/40 backdrop-blur-xl border-white/10">
              <CardHeader>
                <div className="flex items-center justify-between">
                  <CardTitle className="text-white flex items-center gap-2">
                    <Brain className="w-5 h-5" />
                    DiagnÃ³sticos con ExÃ¡menes Reales PAES 2024
                  </CardTitle>
                  <Button onClick={handleGenerateAllDiagnostics} disabled={examLoading}>
                    {activeFeature === 'diagnostics' ? 'Generando...' : 'Generar Todos'}
                  </Button>
                </div>
              </CardHeader>
              <CardContent>
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                  {availableExams.map((exam) => (
                    <Card key={exam.examCode} className="bg-white/5 border-white/10">
                      <CardContent className="p-4">
                        <div className="flex items-start justify-between mb-3">
                          <h4 className="font-semibold text-white text-sm">{exam.title}</h4>
                          <Badge 
                            variant={exam.status === 'available' ? 'default' : 'secondary'}
                            className={
                              exam.status === 'available' ? 'bg-green-600' :
                              exam.status === 'loading' ? 'bg-yellow-600' : 'bg-red-600'
                            }
                          >
                            {exam.status === 'available' ? 'Listo' :
                             exam.status === 'loading' ? 'Cargando' : 'Error'}
                          </Badge>
                        </div>
                        
                        <p className="text-gray-300 text-xs mb-3">{exam.description}</p>
                        
                        <div className="flex items-center justify-between text-xs text-gray-400">
                          <span>{exam.totalQuestions} preguntas</span>
                          <span>AÃ±o {exam.year}</span>
                        </div>
                        
                        {exam.isOfficial && (
                          <Badge variant="outline" className="mt-2 text-yellow-400 border-yellow-400">
                            <Award className="w-3 h-3 mr-1" />
                            Oficial
                          </Badge>
                        )}
                      </CardContent>
                    </Card>
                  ))}
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="superpaes" className="space-y-6">
            <Card className="bg-black/40 backdrop-blur-xl border-white/10">
              <CardHeader>
                <CardTitle className="text-white flex items-center gap-2">
                  <Crown className="w-5 h-5" />
                  SuperPAES - Hub Central del Ecosistema
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                  <div className="space-y-4">
                    <h4 className="text-white font-semibold">Herramientas Activas (9/9)</h4>
                    {[
                      'Dashboard Unificado',
                      'LectoGuÃ­a IA',
                      'DiagnÃ³stico Inteligente',
                      'Ejercicios Adaptativos',
                      'Plan de Estudio IA',
                      'Calendario Inteligente',
                      'Centro Financiero',
                      'Calculadora PAES',
                      'PAES Universe'
                    ].map((tool, index) => (
                      <div key={index} className="flex items-center gap-2 text-green-300">
                        <TrendingUp className="w-4 h-4" />
                        <span className="text-sm">{tool}</span>
                      </div>
                    ))}
                  </div>
                  
                  <div className="space-y-4">
                    <h4 className="text-white font-semibold">Flujo de Aprendizaje</h4>
                    {[
                      '1. DiagnÃ³stico â†’ EvalÃºa nivel actual',
                      '2. Plan IA â†’ Genera plan personalizado',
                      '3. PrÃ¡ctica â†’ Ejercicios adaptativos',
                      '4. Seguimiento â†’ Monitorea progreso'
                    ].map((step, index) => (
                      <div key={index} className="flex items-center gap-2 text-cyan-300">
                        <Target className="w-4 h-4" />
                        <span className="text-sm">{step}</span>
                      </div>
                    ))}
                  </div>
                  
                  <div className="space-y-4">
                    <h4 className="text-white font-semibold">Estado del Sistema</h4>
                    <Button 
                      onClick={() => navigate('/superpaes')} 
                      className="w-full bg-gradient-to-r from-purple-600 to-pink-600"
                    >
                      Acceder a SuperPAES
                    </Button>
                    <div className="text-center space-y-2">
                      <div className="text-green-400 font-bold">Sistema 100% Operativo</div>
                      <div className="text-sm text-gray-300">0 Dependencias Externas</div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="analytics" className="space-y-6">
            <Card className="bg-black/40 backdrop-blur-xl border-white/10">
              <CardHeader>
                <CardTitle className="text-white flex items-center gap-2">
                  <Activity className="w-5 h-5" />
                  Analytics IRT - Sistema Predictivo Avanzado
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div className="space-y-4">
                    <h4 className="text-white font-semibold">Funcionalidades IRT</h4>
                    {[
                      'ParÃ¡metros de DiscriminaciÃ³n AutomÃ¡ticos',
                      'CÃ¡lculo de Dificultad Adaptativo',
                      'PredicciÃ³n de Puntajes PAES',
                      'AnÃ¡lisis de Competencias por Skill',
                      'DistribuciÃ³n Equilibrada de Preguntas',
                      'Error EstÃ¡ndar de MediciÃ³n',
                      'Intervalos de Confianza',
                      'Percentiles Poblacionales'
                    ].map((feature, index) => (
                      <div key={index} className="flex items-center gap-2 text-purple-300">
                        <Brain className="w-4 h-4" />
                        <span className="text-sm">{feature}</span>
                      </div>
                    ))}
                  </div>
                  
                  <div className="space-y-4">
                    <h4 className="text-white font-semibold">Algoritmos Disponibles</h4>
                    <div className="space-y-3">
                      {[
                        { name: 'IRT 3 ParÃ¡metros', status: 'Activo', accuracy: '94%' },
                        { name: 'AnÃ¡lisis Ciencias 2024', status: 'Activo', accuracy: '91%' },
                        { name: 'MatemÃ¡tica M2 Ponderado', status: 'Activo', accuracy: '89%' },
                        { name: 'Historia Contextual', status: 'Activo', accuracy: '87%' }
                      ].map((algo, index) => (
                        <div key={index} className="p-3 bg-white/5 rounded-lg">
                          <div className="flex items-center justify-between">
                            <span className="text-white text-sm font-medium">{algo.name}</span>
                            <Badge variant="outline" className="text-green-400 border-green-400">
                              {algo.status}
                            </Badge>
                          </div>
                          <div className="text-xs text-gray-400 mt-1">
                            PrecisiÃ³n: {algo.accuracy}
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </TabsContent>
        </Tabs>
      </motion.div>
    </div>
  );
};

